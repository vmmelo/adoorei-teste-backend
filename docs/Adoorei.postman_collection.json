{
	"info": {
		"_postman_id": "b259bce6-1d26-49ec-ad6b-00880b35dfaa",
		"name": "Adoorei",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22791775"
	},
	"item": [
		{
			"name": "Products",
			"item": [
				{
					"name": "Get products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/products?limit=10&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "This endpoint makes an HTTP GET request to retrieve a paginated list of products. The \"page\" query parameter is used to specify the page number to be retrieved.\n\n### Response\n\n- Status: 200\n- Content-Type: application/json\n    \n\n#### Response Body\n\nThe response contains a JSON object with the following properties:\n\n- \"data\": An array of products, each containing \"id\", \"name\", \"price\", \"description\", \"created_at\", and \"updated_at\" attributes.\n- \"pagination\": Contains pagination information such as \"total\", \"per_page\", \"from\", \"to\", \"current_page\", \"last_page\", and \"has_next\".\n- \"links\": Provides URLs for the first, last, previous, and next pages.\n- \"meta\": Includes metadata like \"current_page\", \"from\", \"last_page\", \"links\" array, \"path\", \"per_page\", \"to\", and \"total\".\n    \n\nNote: The actual values for the product attributes and pagination information will be returned in the response."
					},
					"response": []
				}
			]
		},
		{
			"name": "Sales",
			"item": [
				{
					"name": "Get sales",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/sales?limit=5&page=1&with_trashed=true",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sales"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "with_trashed",
									"value": "true"
								}
							]
						},
						"description": "This endpoint makes an HTTP GET request to retrieve a paginated list of products. The \"page\" query parameter is used to specify the page number to be retrieved. The \"with_trashed\" parameter includes in response the soft-deleted sales.\n\n### Response\n\n- Status: 200\n- Content-Type: application/json\n    \n\n#### Response Body\n\nThe response contains a JSON object with the following properties:\n\n- \"data\": An array of products, each containing \"id\", \"name\", \"price\", \"description\", \"created_at\", and \"updated_at\" attributes.\n- \"pagination\": Contains pagination information such as \"total\", \"per_page\", \"from\", \"to\", \"current_page\", \"last_page\", and \"has_next\".\n- \"links\": Provides URLs for the first, last, previous, and next pages.\n- \"meta\": Includes metadata like \"current_page\", \"from\", \"last_page\", \"links\" array, \"path\", \"per_page\", \"to\", and \"total\".\n    \n\nNote: The actual values for the product attributes and pagination information will be returned in the response."
					},
					"response": []
				},
				{
					"name": "Show Sale",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/sales/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sales",
								"1"
							]
						},
						"description": "Este endpoint recebe o ID de uma venda realizada e exibe mais detalhes como os produtos envolvidos, preços, ids.\n\nExemplo de resposta:\n\n``` json\n\n{\n    \"id\": 1,\n    \"amount\": \"7444.02\",\n    \"deleted_at\": null,\n    \"created_at\": \"2024-03-04T04:34:40.000000Z\",\n    \"updated_at\": \"2024-03-04T04:34:40.000000Z\",\n    \"sales_products\": [\n        {\n            \"id\": 1,\n            \"sale_id\": 1,\n            \"product_id\": 1,\n            \"amount\": 1,\n            \"created_at\": \"2024-03-04T04:34:40.000000Z\",\n            \"updated_at\": \"2024-03-04T04:34:40.000000Z\",\n            \"product\": {\n                \"id\": 1,\n                \"name\": \"Celular atque 9\",\n                \"price\": \"4000.9\",\n                \"description\": \"Voluptatibus dolor dicta minus sint qui debitis iste iure error.\",\n                \"created_at\": \"2024-03-04T04:33:33.000000Z\",\n                \"updated_at\": \"2024-03-04T04:33:33.000000Z\"\n            }\n        },\n        {\n            \"id\": 2,\n            \"sale_id\": 1,\n            \"product_id\": 2,\n            \"amount\": 2,\n            \"created_at\": \"2024-03-04T04:34:40.000000Z\",\n            \"updated_at\": \"2024-03-04T04:34:40.000000Z\",\n            \"product\": {\n                \"id\": 2,\n                \"name\": \"Celular et 7\",\n                \"price\": \"1721.56\",\n                \"description\": \"Id dolor quia sint ea esse ipsa repellat cum asperiores quia laboriosam.\",\n                \"created_at\": \"2024-03-04T04:33:33.000000Z\",\n                \"updated_at\": \"2024-03-04T04:33:33.000000Z\"\n            }\n        }\n    ]\n}\n ```"
					},
					"response": []
				},
				{
					"name": "Create sale",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"products\": [\r\n        {\r\n            \"id\": 1,\r\n            \"amount\": 1 \r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"amount\": 2 \r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/sales",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sales"
							]
						},
						"description": "Endpoint responsável pela criação de uma nova venda. Espera receber um objeto JSON com a chave \"products\" contendo um array de produtos com seus respectivos ids e quantidade.\n\nSeu retorno traz os detalhes da venda que foi salva, incluindo os seus produtos."
					},
					"response": []
				},
				{
					"name": "Add products to sale",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"products\": [\r\n        {\r\n            \"id\": 3,\r\n            \"amount\": 1 \r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/sales/add_products/5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sales",
								"add_products",
								"5"
							]
						},
						"description": "Endpoint responsável por adicionar produtos a uma venda realizada anteriormente.\n\nEspera receber um objeto JSON com a chave \"products\" contendo um array de produtos com seus respectivos ids e quantidade.\n\nSeu retorno traz os detalhes da venda que foi salva, incluindo os seus produtos."
					},
					"response": []
				},
				{
					"name": "Cancel sale",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/sales/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"sales",
								"2"
							]
						},
						"description": "Endpoint responsável por excluir uma venda do sistema. Recebe como parâmetro o ID da venda\n\nRetorna status code 204 em caso de sucesso\n\nou 400 em caso de erro na request"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "localhost:8989/api",
			"type": "string"
		}
	]
}